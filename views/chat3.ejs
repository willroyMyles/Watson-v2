<!DOCTYPE html>
<html lang="en" >

<head>
  <meta charset="UTF-8">
  <title>Utech Watson Assistant</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  
  <link rel='stylesheet' href='https://www.google.com/fonts#UsePlace:use/Collection:Roboto:400,300,100,500'>
<link rel='stylesheet' href='vendor/bootstrap/css/bootstrap.min.css'>
<link rel='stylesheet' href='https://www.google.com/fonts#UsePlace:use/Collection:Roboto+Slab:400,700,300,100'>

      <link rel="stylesheet" href="css/stylealt.css">
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
	 <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>

	<link rel="stylesheet" media="screen" href="/assets/bootstrap.min.css")>
	<link rel="stylesheet" media="screen" href="/assets/main.css")>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" rel="stylesheet" />
   <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
	 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
	 <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js">	 </script>
</head>

<body>

<div id="dialog" class="dialog dialog-effect-in">
  <div class="dialog-front">
    <div class="dialog-content">

	<div class="content">
		<div class="contact-profile">
			<img src="/images/watson.png") alt="" />
			<p>Utech Watson Assistant</p>
			<div class="social-media">
			
				<p>Mute voice <input type="checkbox" name="mute"></p>
			
				<i class="fa fa-facebook" aria-hidden="false"></i>
				<i class="fa fa-twitter" aria-hidden="true"></i>
				 <i class="fa fa-instagram" aria-hidden="true"></i>
			</div>
		</div>
		<div class="messages">
			<ul>
				<%# <li class="sent">
					<img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
					<p>How the hell am I supposed to get a jury to believe you when I am not even sure that I do?!</p>
				</li>
				<li class="replies">
					<img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
					<p>When you're backed against the wall, break the god damn thing down.</p>
				</li>
				<li class="replies">
					<img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
					<p>Excuses don't win championships.</p>
				</li> 
				<li class="sent">
					<img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
					<p>Oh yeah, did Michael Jordan tell you that?</p>
				</li>
				<li class="replies">
					<img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
					<p>No, I told him that.</p>
				</li>
				<li class="replies">
					<img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
					<p>What are your choices when someone puts a gun to your head?</p>
				</li>
				<li class="sent">
					<img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
					<p>What are you talking about? You do what they say or they shoot you.</p>
				</li>
				<li class="replies">
					<img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
					<p>Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and forty six other things.</p>
				</li> %>
			</ul>
		</div>
        <div class="message-input">
			<div class="wrap">				
			<input type="text" placeholder="Write your message..." />
			<button class="submit" type="submit" onclick=""><i class="fa fa-paper-plane" aria-hidden="true"> send</i></button>
			</div>
		</div>

	</div>

    </div>
  </div>
</div>
 <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>
<script >$(".messages").animate({ scrollTop: $(document).height() }, "fast");



function stopSpeaking(){
	if(speechSynthesis.speaking){
		speechSynthesis.cancel();
	}
}

function talk(text){
	console.log($( "input[type=checkbox][name=mute]" ).val());
	if($( "input[type=checkbox][name=mute]" ).val()) true;
  if ('speechSynthesis' in window) {
    var msg = new SpeechSynthesisUtterance();
	var voices = window.speechSynthesis.getVoices();
	msg.voice = voices[10]; // Note: some voices don't support altering params
	msg.voiceURI = 'native';
	msg.volume = 1; // 0 to 1
	msg.rate = 1.2; // 0.1 to 10
	msg.pitch = 1; //0 to 2
	msg.text = text;
	msg.lang = 'en-US';

  speechSynthesis.speak(msg);

     
    
  } else {
    //$('#modal1').openModal();
  }

};


function newMessage() {
	message = $(".message-input input").val();
	if($.trim(message) == '') {
		return false;
	}
	$('<li class="sent"><img src="@routes.Assets.versioned("images/male.png")" alt="" /><p>' + message + '</p></li>').appendTo($('.messages ul'));
	$('.message-input input').val(null);
	//$('.contact.active .preview').html('<span>You: </span>' + message);
$(".messages").animate({ scrollTop: $(document).height() }, 100);
	stopSpeaking();
};

function writeMessage(msg){
	
	$('<li class="replies"><img src="/images/watson.png" alt="" /><p>' + msg + '</p></li>').appendTo($('.messages ul'));
$(".messages").animate({ scrollTop: $(document).height() }, 100);
	//send message to controller
	talk(msg)
}

function writeOption(element){
element.option.forEach(option =>{
		var buttonLabel = option.label;
		var buttonValue = option.value.input.text;
$('<li class="replies"><img src="/images/watson.png" alt="" /><p>' + element.title + '<br><button class="button" onclick="sendMsgToController('+"'"+buttonValue+"'"+')" href="#">'+  buttonLabel +'</button> </p></li>').appendTo($('.messages ul'));
});
$(".messages").animate({ scrollTop: $(document).height() }, 100);
}

function bubbleSort(nameArr, valueArr){
	var swapped;
    do {
        swapped = false;
        for (var i=0; i < valueArr.length-1; i++) {
            if (valueArr[i] > valueArr[i+1]) {
								var temp = valueArr[i];
								var tempWord = nameArr[i];

								valueArr[i] = valueArr[i+1];
								nameArr[i] = nameArr[i+1];
								
                valueArr[i+1] = temp;
                nameArr[i+1] = tempWord;
                swapped = true;
            }
        }
		} while (swapped);
		
	return {nameArr, valueArr};
}

function writeResults(element){
	var nameArr = [];
  var valueArr = [];
	
	// change object into array
  for (var prop in element.results) {
    if (element.results.hasOwnProperty(prop)) {
			nameArr.push(prop);
			valueArr.push(element.results[prop])
    }
	}

	var item = bubbleSort(nameArr, valueArr);
	nameArr = item.nameArr;
	valueArr = item.valueArr;
	
	console.log(nameArr);
	console.log(valueArr);

		$.ajax({
        type: 'POST',
        url: '/chart',
        data: item,
        success: function(data){
					//do something with the data via front-end framework
					createChart(nameArr, element.values, data);
						$('<li class="replies"><img src="/images/watson.png" alt="" /><p>According to your results, your line of best fit indicates the following</p></br></li>').appendTo($('.messages ul'));
	var index =0;
	valueArr.forEach( num =>{
		var txt = spliStringAndReturn(nameArr[index]);
		$('<li class="replies"><img src="/images/watson.png" alt="" /><p><button onclick="sweetat('+"'"+ txt+"'"+')" href="#" class="button">'+ txt +'</button>  with compatability of '+ (100-num)+'%</p></br></li>').appendTo($('.messages ul'));
		index++;
	});
					}
		}); 


	


}

function createChart(nameArr, valueArr, data1){
	var width = $('.messages').width();
	var height = $('.messages').height();
			$('<li class="replies"><img src="/images/watson.png" alt="" /><canvas id="myChart" width="'+width+'" height="'+height+'"></canvas></li>').appendTo($('.messages ul'));
var ctx = document.getElementById('myChart').getContext('2d');
var myChart = new Chart(ctx, {
		type: 'line',
    data: {
					labels: ['job opportunities','potential income', 'passion', 'logical reasoning', 'math aptitude','english aptitude','programming aptitude','networks aptitude',
        						'concrete thinker','conceptual thinker', 'organizational skills','analytical skills'],

        datasets: [{
            label: 'Multimedia',
            data: data1.Multimedia,
            backgroundColor:' rgba(255, 99, 132, 0.0)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
        },{
            label: 'Enterprise Systems',
            data: data1.EnterpriseSystems,
            backgroundColor:' rgba(75, 192, 186, 0.0)',
            borderColor: ' rgba(75, 192, 186, 1)',
            borderWidth: 1,
        },{
            label: 'Information Systems',
            data: data1.InformationSystems,
            backgroundColor:' rgba(255, 206, 82, 0.0)',
            borderColor: 'rgba(255, 206, 82, 1)',
            borderWidth: 1,
        },{
            label: 'Networking',
            data: data1.Networking,
            backgroundColor:' rgba(54, 162, 232, 0.0)',
            borderColor: 'rgba(54, 162, 232, 1)',
            borderWidth: 1,
        },{
            label: 'Computer Science',
            data: data1.ComputerScience,
            backgroundColor:' rgba(215, 29, 82, 0.0)',
            borderColor: 'rgba(215, 29, 82, 1)',
            borderWidth: 1,
        },{
            label: 'My Results',
            data: valueArr,
            backgroundColor:' rgba(155, 99, 232, 0.0)',
            borderColor: 'rgba(155, 99, 232, 1)',
            borderWidth: 1,
        }]
		},
		
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                },
                scaleLabel: {
                     display: true,
                     labelString: 'duno yet',
                  }
            }]
        }
    }
});

setTimeout(function() {
  myChart.options.scales = {
    xAxes: [],
    yAxes: [
      {
        ticks: {
          beginAtZero: false
				},
				 scaleLabel: {
                     display: true,
                     labelString: 'duno yet',
        }
      }
    ]
  };
  myChart.update();
}, 1000);
}

function spliStringAndReturn(text){
	var arrString = text.match(/[A-Z][a-z]+/g);
	var txt = arrString[0];
	if(arrString[1] !==undefined) txt = txt + " " + arrString[1];
	return txt;
}

function sweetat(text){
	var txt = spliStringAndReturn(text);
	//TODO send message to controller to get values for each search



var item = {item : txt};
	$.ajax({
        type: 'POST',
        url: '/specialization',
        data: item,
        success: function(data){
					//do something with the data via front-end framework
					var count = 0;
					var arr =[];
					var info= {title:"", startingSalary: "", potentialSalary:"",jobSatisfaction:""};
					var infoString ="";

					data.forEach(element=>{

						if(count == 0) infoString = infoString + '<h1>'+ element+'</h1></br>';
						if(count == 1) infoString = infoString + '<p> Starting salary : '+ element+'</p></br>';
						if(count == 2) infoString = infoString + '<p> Mid jop salary : '+ element+'</p></br>';
						if(count == 3) infoString = infoString + '<p> Expected Job Satisfaction : '+ element+'</p></br></br></br>';
						
						count++;
						if(count >= 4 ) count =0;
					});

					Swal.fire({
						html : infoString
					});


				}
      });

}

//message sent from interactions
function sendMsgToController(msg){
		stopSpeaking();
	console.log(msg);
	item = {item: msg};
      $.ajax({
        type: 'POST',
        url: '/chat',
        data: item,
        success: function(data){
					//do something with the data via front-end framework
					data.forEach(element => {
						if(element.response_type === 'text') writeMessage(element.text);
						if(element.response_type === 'option') writeOption(element);
					});
        }
      });
}

//message sent from chat box
function sendToController(){
	message = $(".message-input input").val();
	if($.trim(message) == '') {
		return false;
	}
	
	item = {item: message};
      $.ajax({
        type: 'POST',
        url: '/chat',
        data: item,
        success: function(data){
					//do something with the data via front-end framework
					data.forEach(element => {
						if(element.response_type === 'text') writeMessage(element.text);
						if(element.response_type === 'option') writeOption(element);
						if(element.response_type === 'results') writeResults(element);
					});
        }
      });
}

$('.submit').click(function() {
		sendToController();
	newMessage();
	//  send to controller
});

$(window).on('keydown', function(e) {
  if (e.which == 13) {
		sendToController();
		newMessage();
    return false;
  }
});

$(document).ready(function(){

	setTimeout(() => {
			sendMsgToController('hi');
	}, 2000);

});
//# sourceURL=pen.js
</script>
</body></html>